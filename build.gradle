plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id "com.diffplug.gradle.spotless" version "3.28.1"
	id 'java'
}
// Personal Spotless formatting rules
apply from: "https://git.io/JfekU"

group = 'io.github.trello-talk'
version = '0.3.0'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'com.github.scribejava:scribejava-apis:6.4.1'
	implementation 'org.postgresql:postgresql:42.2.12.jre7'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.6'

	// https://mvnrepository.com/artifact/org.json/json
	compile group: 'org.json', name: 'json', version: '20190722'

	// https://mvnrepository.com/artifact/com.konghq/unirest-java
	compile group: 'com.konghq', name: 'unirest-java', version: '2.2.00'

	implementation platform('org.springframework.session:spring-session-bom:Corn-SR2')

	compile 'org.springframework.session:spring-session-core'
	compile 'org.springframework.session:spring-session-jdbc'
}

test {
	useJUnitPlatform()
}

tasks.register('initCodeStyle') {
	group = 'build setup'
	description = 'Initialize IDEA code style file'
	File codeStyleFile = new File(".idea/codeStyles/Project.xml")

	onlyIf {
		!codeStyleFile.exists()
	}
	doLast {
		codeStyleFile << new URL("https://git.io/JfeYQ").getText()
		if (!codeStyleFile.exists()) {
			throw new FileNotFoundException()
		} else logger.quiet("Downloaded ${codeStyleFile.name} from Gist")
	}
}
// Check code formatting before applying
spotlessApply.dependsOn('initCodeStyle', 'spotlessJavaCheck')
